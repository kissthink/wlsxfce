#!/bin/sh

# Slackware build script for xfce4

# Copyright 2014  Widya Walesa <walecha99@gmail.com>
# All rights reserved.
#
# Redistribution and use of this script, with or without modification, is
# permitted provided that the following conditions are met:
#
# 1. Redistributions of this script must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ''AS IS'' AND ANY EXPRESS OR IMPLIED
# WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO
# EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
# PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
# OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
# WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
# OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
# ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. FURTHERMORE I AM NOT LIABLE IF
# YOUR DATA IS DESTROYED, YOUR HOUSE BURNS DOWN OR YOUR DOG RUNS OFF.

BUILD=1
TAG=${TAG:-_wls}
NUMJOBS=${NUMJOBS:--j4}

if [ -z "$ARCH" ]; then
  case "$( uname -m )" in
    i?86) ARCH=i486 ;;
    arm*) ARCH=arm ;;
       *) ARCH=$( uname -m ) ;;
  esac
fi

CWD=$(pwd)

if [ "$ARCH" = "i486" ]; then
  SLKCFLAGS="-O2 -pipe -march=i486 -mtune=i686"
  SLKLDFLAGS=""
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "i686" ]; then
  SLKCFLAGS="-O2 -pipe -march=i686 -mtune=i686"
  SLKLDFLAGS=""
  LIBDIRSUFFIX=""
elif [ "$ARCH" = "x86_64" ]; then
  SLKCFLAGS="-O2 -m64 -pipe -fPIC"
  SLKLDFLAGS=""
  LIBDIRSUFFIX="64"
else
  SLKCFLAGS="-O2"
  SLKLDFLAGS=""
  LIBDIRSUFFIX=""
fi

set -e

LIST="$1"

if [ ! "$LIST" = "" ]; then
  LIST="$LIST"
else
  LIST="`cat $CWD/xfce4.list`"
fi

for PRGNAM in $LIST; do
  if [ -f $CWD/version/$PRGNAM ]; then
    VERSION="`cat $CWD/version/$PRGNAM`"
  fi
  if [ ! "$VERSION" = "" ]; then
    VERSION="$VERSION"
  else
    echo "Finding version for $PRGNAM automatically in ../src/"
    if [ -e $CWD/src/$PRGNAM-*.tar.?z* ]; then
      VERSION="`basename $CWD/src/$PRGNAM-*.tar.?z* | rev | cut -d . -f 3- | cut -d - -f 1| rev`"
    else
      echo "Error: Could not found $PRGNAM source."
      exit 1
    fi
  fi

  if [ -f $CWD/src/$PRGNAM-$VERSION.tar.?z* ]; then
    echo "====================================================================="
    echo 
    echo "Building $PRGNAM-$VERSION"
    echo 
    echo "====================================================================="

    WRK=${WRK:-/tmp/wlsbuild}
    PKG=$WRK/package-$PRGNAM
    OUTPUT=${OUTPUT:-/tmp/XFCE}
    DOCS="AUTHORS BUGS COMPOSITOR COPYING* FAQ HACKING INSTALL NEWS NOTES README* STATUS THANKS TODO example.gtkrc-2.0"

    rm -rf $PKG
    mkdir -p $WRK $PKG $OUTPUT
    cd $WRK
    rm -rf $PRGNAM-$VERSION
    echo "Extracting $PRGNAM"
    tar xf $CWD/src/$PRGNAM-$VERSION.tar.?z* || exit 1
    echo
    cd $PRGNAM-$VERSION || exit 1

    if [ -f $CWD/patches/$PRGNAM ]; then
      cat $CWD/patches/$PRGNAM | patch -p1 --verbose || exit 1
    fi

    chown -R root:root .
    find . \
    \( -perm 777 -o -perm 775 -o -perm 711 -o -perm 555 -o -perm 511 \) \
    -exec chmod 755 {} \; -o \
    \( -perm 666 -o -perm 664 -o -perm 600 -o -perm 444 -o -perm 440 -o -perm 400 \) \
    -exec chmod 644 {} \;

    if [ -f $CWD/flags/$PRGNAM ]; then
      source $CWD/flags/$PRGNAM
    fi

    if [ -f $CWD/options/$PRGNAM ]; then
      source $CWD/options/$PRGNAM
    fi

    if [ -f configure ]; then
      LDFLAGS="$SLKLDFLAGS" \
      CFLAGS="$SLKCFLAGS" \
      CXXFLAGS="$SLKCFLAGS" \
      ./configure \
	--build=$ARCH-slackware-linux \
	--program-prefix= --program-suffix= \
	--prefix=/usr --exec-prefix=/usr \
	--bindir=/usr/bin --sbindir=/usr/sbin \
	--libdir=/usr/lib$LIBDIRSUFFIX --includedir=/usr/include \
	--mandir=/usr/man --infodir=/usr/info \
	--sysconfdir=/etc \
	--localstatedir=/var --sharedstatedir=/var/lib \
	--docdir=/usr/doc/$PRGNAM-$VERSION \
	--disable-static --enable-shared \
	--disable-debug \
	--disable-gtk-doc \
	$OPTS \
	|| exit 1
    else
      LDFLAGS="$SLKLDFLAGS" \
      CFLAGS="$SLKCFLAGS" \
      CXXFLAGS="$SLKCFLAGS" \
      ./autogen.sh \
	--build=$ARCH-slackware-linux \
	--program-prefix= --program-suffix= \
	--prefix=/usr --exec-prefix=/usr \
	--bindir=/usr/bin --sbindir=/usr/sbin \
	--libdir=/usr/lib$LIBDIRSUFFIX --includedir=/usr/include \
	--mandir=/usr/man --infodir=/usr/info \
	--sysconfdir=/etc/xfce \
	--localstatedir=/var --sharedstatedir=/var/lib \
	--docdir=/usr/doc/$PRGNAM-$VERSION \
	--disable-static --enable-shared \
	--disable-debug \
	--disable-gtk-doc \
	$OPTS \
	|| exit 1
    fi

    make || exit 1
    make install DESTDIR=$PKG || exit 1

    # Additional script
    if [ -f $CWD/scripts/$PRGNAM ]; then
      /bin/sh $CWD/scripts/$PRGNAM
    fi

    find $PKG | xargs file | grep -e "executable" -e "shared object" | grep ELF \
      | cut -f 1 -d : | xargs strip --strip-unneeded 2> /dev/null || true

    if [ -d $PKG/usr/share/man ]; then
      mv $PKG/usr/share/man $PKG/usr/
    fi

    if [ -d $PKG/usr/man ]; then
      find $PKG/usr/man -type f -exec gzip -9 {} \;
      for i in $( find $PKG/usr/man -type l ) ; do ln -s $( readlink $i ).gz $i.gz ; rm $i ; done
    fi

    mkdir -p $PKG/usr/doc/$PRGNAM-$VERSION

    for F in $DOCS; do
      if [ -f $F ]; then
        cp -a $F $PKG/usr/doc/$PRGNAM-$VERSION
      fi
    done

    mkdir -p $PKG/install
    if [ -f $CWD/slack-desc/$PRGNAM ]; then
      cat $CWD/slack-desc/$PRGNAM > $PKG/install/slack-desc
    fi
    if [ -f $CWD/slack-required/$PRGNAM ]; then
      cat $CWD/slack-required/$PRGNAM > $PKG/install/slack-required
    fi
    if [ -f $CWD/doinst/$PRGNAM ]; then
      cat $CWD/doinst/$PRGNAM > $PKG/install/doinst.sh
    fi

    echo "Creating package $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz"
    cd $PKG
    /sbin/makepkg -p -l y -c n $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz || exit 1

    echo "Installing package $PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz"
    upgradepkg --install-new --reinstall $OUTPUT/$PRGNAM-$VERSION-$ARCH-$BUILD$TAG.txz || exit 1
    ldconfig
    echo

    echo "Cleaning up build directory"
    cd $WRK; rm -rf $PRGNAM-$VERSION; rm -rf $PKG
    echo
    sleep 3
  else
    echo "Error: Could not found $PRGNAM-$VERSION source."
    echo "Exit"
    exit 1
  fi
done
